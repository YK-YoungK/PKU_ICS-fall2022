# Name: 
# Id: 

# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp          # Set up stack pointer
    call main                   # Execute main program
    halt                        # Terminate program


    .align 8
Array:
    .quad 0xbca
    .quad 0xcba
    .quad 0xacb
    .quad 0xcab
    .quad 0xabc
    .quad 0xbac


bubble_sort:
    irmovq $8, %r8
    addq %rsi, %rsi
    addq %rsi, %rsi
    addq %rsi, %rsi
    subq %r8, %rsi
    addq %rdi, %rsi             # Same as "leaq	-8(%rdi,%rsi,8), %rsi"
	jmp	L12
L13:
	addq %r8, %rax
L15:
    rrmovq %rax, %rbx
    subq %rsi, %rbx             # Same as "cmpq %rsi, %rax"
	jge	L17
	mrmovq	8(%rax), %rdx
	mrmovq	0(%rax), %rcx
    rrmovq %rdx, %rbx
    subq %rcx, %rbx             # Same as "cmpq	%rcx, %rdx"
	jge	L13
	rmmovq	%rcx, 8(%rax)
	rmmovq	%rdx, 0(%rax)
	jmp	L13
L17:
	subq %r8, %rsi
L12:
    rrmovq %rsi, %rbx
    subq %rdi, %rbx             # Same as "cmpq %rdi, %rsi"
	jle	L18
	rrmovq %rdi, %rax
	jmp	L15
L18:
	ret


main:
    irmovq Array, %rdi          # Pass the argument
    irmovq $6, %rsi             # Pass the argument
    call bubble_sort            # Call
    ret

    .pos 0x200
stack:
